;
; Mnemonics:
; 
; /rm8    Byte GPR register or memory address
; /rm16   Word GPR register or memory address
; /rm32   Dword GPR register or memory address
; /rm64   Qword GPR register or memory address
; /rm80   Tword GPR register or memory address
; /rm128  Oword GPR register or memory address
; /rmv    Variable GPR register or memory address (Width is defined by the Operand Size or REX prefixes and the default operand width)
; /m8     Byte memory address
; /m16    Word memory address
; /m32    Dword memory address
; /m48    Sword memory address
; /m64    Qword memory address
; /m80    Tword memory address
; /m128   Oword memory address
; /mv     Variable memory address (Width is defined by the Operand Size or REX prefixes and the default operand width)
; /m14e24 14 Byte memory address or 24 byte x87 environment
; /a8     Byte immediate address
; /a16    Word immediate address
; /a32    Dword immediate address
; /a64    Qword immediate address
; /a80    Tword immediate address
; /a128   Oword immediate address
; /av     Variable immediate address (Width is defined by the Operand Size prefix and the default operand width)
; /r8     Byte GPR register
; /r16    Word GPR register
; /r32    Dword GPR register
; /r64    Qword GPR register
; /r80    Tword GPR register
; /r128   Oword GPR register
; /rv     Variable GPR register (Width is defined by the Operand Size or REX prefixes and the default operand width)
; /ro8    Relative byte offset
; /ro16   Relative word offset
; /ro32   Relative dword offset
; /ro64   Relative qword offset
; /ro80   Relative tword offset
; /ro128  Relative oword offset
; /rov    Relative variable offset (Width is defined by the Operand Size prefix and the default operand width)
; /i8     Immediate byte
; /i16    Immediate word (Can be a half float)
; /i32    Immediate dword (Can be a float)
; /i64    Immediate qword (Can be a double float)
; /i80    Immediate tword (Can be a long double float
; /i128   Immediate oword
; /iv     Variable immediate (Width is defined by the Operand Size prefix and the default operand width)
; /iw     Variable immediate (Width is defined by the Operand Size or REX prefixes and the default operand width)
; /i8a    Array of immediate bytes  (Can be an ASCII string or a UTF-8 string)
; /i16a   Array of immediate words  (Can be a UTF-16 string)
; /i32a   Array of immediate dwords (Can be a UTF-32 string)
; /i64a   Array of immediate qwords
; /i80a   Array of immediate twords
; /i128a  Array of immediate owords
; /label  A label name
; /string A string (Can be an ASCII string or a UTF-8 string)
; 

; 
; Opcode syntax:
; 
; /bits    Specifies what bits to assemble for future instructions.
; /org     Specifies the origin point for future instructions.
; /global  Specifies a label to be global and can be seen from other files.
; /extern  Specifies a label to be external and can be found in another file.
; /section Specifies what section to put future instructions into.
; /digit   Indicates that the ModRM byte specifies only one register or memory (r/m) operand.
;            The digit is encoded into the reg field and is used as an instruction opcode extension.
;            Valid values range from 0 to 7.
; /r       Indicates that the ModRM byte specifies both a register operand an a reg/mem (register or memory) operand.
; /+r      Indicates that the reg/mem (register or memory) operand is encoded as the lower 3 bits of the previous byte
; /c       Indicates that the following bytes specifies a relative offset operand.
; /i       Indicates that the following bytes specifies an immediate value operand.
; /ia      Indicates that the following bytes specifies an array of immediate values operand.
; /res<s>  Indicates that the following bytes specifies an array of values with given size <s>.
; 

; 

; Pre defined instructions
DB      [/i8a]     [values]  [/ia]      [] [LASM]
DW      [/i16a]    [values]  [/ia]      [] [LASM]
DD      [/i32a]    [values]  [/ia]      [] [LASM]
DQ      [/i64a]    [values]  [/ia]      [] [LASM]
DT      [/i80a]    [values]  [/ia]      [] [LASM]
DO      [/i128a]   [values]  [/ia]      [] [LASM]
RESB    [/i64]     [bytes]   [/resb]    [] [LASM]
RESW    [/i64]     [bytes]   [/resw]    [] [LASM]
RESD    [/i64]     [bytes]   [/resd]    [] [LASM]
RESQ    [/i64]     [bytes]   [/resq]    [] [LASM]
REST    [/i64]     [bytes]   [/rest]    [] [LASM]
RESO    [/i64]     [bytes]   [/reso]    [] [LASM]
BITS    [/i16]     [bits]    [/bits]    [] [LASM]
ORG     [/i64]     [origin]  [/org]     [] [LASM]
GLOBAL  [/label]   [label]   [/global]  [] [LASM]
EXTERN  [/string]  [label]   [/extern]  [] [LASM]
SECTION [/string]  [section] [/section] [] [LASM]

; 8086 General Purpose Instruction set
ADD    [/rm8,/r8] [dest,src]  [0x00,/r]     [16,32] [8086]
ADD    [/rmv,/rv] [dest,src]  [0x01,/r]     [16,32] [8086]
ADD    [/r8,/rm8] [dest,src]  [0x02,/r]     [16,32] [8086]
ADD    [/rv,/rmv] [dest,src]  [0x03,/r]     [16,32] [8086]
ADD    [AL,/i8]   [dest,src]  [0x04,/i]     [16,32] [8086]
ADD    [Av,/iv]   [dest,src]  [0x05,/i]     [16,32] [8086]
PUSH   [ES]       [src]       [0x06]        [16,32] [8086]
POP    [ES]       [dest]      [0x07]        [16,32] [8086]
OR     [/rm8,/r8] [dest,src]  [0x08,/r]     [16,32] [8086]
OR     [/rmv,/rv] [dest,src]  [0x09,/r]     [16,32] [8086]
OR     [/r8,/rm8] [dest,src]  [0x0A,/r]     [16,32] [8086]
OR     [/rv,/rmv] [dest,src]  [0x0B,/r]     [16,32] [8086]
OR     [AL,/i8]   [dest,src]  [0x0C,/i]     [16,32] [8086]
OR     [Av,/iv]   [dest,src]  [0x0D,/i]     [16,32] [8086]
PUSH   [CS]       [src]       [0x0E]        [16,32] [8086]
ADC    [/rm8,/r8] [dest,src]  [0x10,/r]     [16,32] [8086]
ADC    [/rmv,/rv] [dest,src]  [0x11,/r]     [16,32] [8086]
ADC    [/r8,/rm8] [dest,src]  [0x12,/r]     [16,32] [8086]
ADC    [/rv,/rmv] [dest,src]  [0x13,/r]     [16,32] [8086]
ADC    [AL,/i8]   [dest,src]  [0x14,/i]     [16,32] [8086]
ADC    [Av,/iv]   [dest,src]  [0x15,/i]     [16,32] [8086]
PUSH   [SS]       [src]       [0x16]        [16,32] [8086]
POP    [SS]       [dest]      [0x17]        [16,32] [8086]
SBB    [/rm8,/r8] [dest,src]  [0x18,/r]     [16,32] [8086]
SBB    [/rmv,/rv] [dest,src]  [0x19,/r]     [16,32] [8086]
SBB    [/r8,/rm8] [dest,src]  [0x1A,/r]     [16,32] [8086]
SBB    [/rv,/rmv] [dest,src]  [0x1B,/r]     [16,32] [8086]
SBB    [AL,/i8]   [dest,src]  [0x1C,/i]     [16,32] [8086]
SBB    [Av,/iv]   [dest,src]  [0x1D,/i]     [16,32] [8086]
PUSH   [DS]       [src]       [0x1E]        [16,32] [8086]
POP    [DS]       [dest]      [0x1F]        [16,32] [8086]
AND    [/rm8,/r8] [dest,src]  [0x20,/r]     [16,32] [8086]
AND    [/rmv,/rv] [dest,src]  [0x21,/r]     [16,32] [8086]
AND    [/r8,/rm8] [dest,src]  [0x22,/r]     [16,32] [8086]
AND    [/rv,/rmv] [dest,src]  [0x23,/r]     [16,32] [8086]
AND    [AL,/i8]   [dest,src]  [0x24,/i]     [16,32] [8086]
AND    [Av,/iv]   [dest,src]  [0x25,/i]     [16,32] [8086]
DAA    []         []          [0x27]        [16,32] [8086]
SUB    [/rm8,/r8] [dest,src]  [0x28,/r]     [16,32] [8086]
SUB    [/rmv,/rv] [dest,src]  [0x29,/r]     [16,32] [8086]
SUB    [/r8,/rm8] [dest,src]  [0x2A,/r]     [16,32] [8086]
SUB    [/rv,/rmv] [dest,src]  [0x2B,/r]     [16,32] [8086]
SUB    [AL,/i8]   [dest,src]  [0x2C,/i]     [16,32] [8086]
SUB    [Av,/iv]   [dest,src]  [0x2D,/i]     [16,32] [8086]
DAS    []         []          [0x2F]        [16,32] [8086]
XOR    [/rm8,/r8] [dest,src]  [0x30,/r]     [16,32] [8086]
XOR    [/rmv,/rv] [dest,src]  [0x31,/r]     [16,32] [8086]
XOR    [/r8,/rm8] [dest,src]  [0x32,/r]     [16,32] [8086]
XOR    [/rv,/rmv] [dest,src]  [0x33,/r]     [16,32] [8086]
XOR    [AL,/i8]   [dest,src]  [0x34,/i]     [16,32] [8086]
XOR    [Av,/iv]   [dest,src]  [0x35,/i]     [16,32] [8086]
AAA    []         []          [0x37]        [16,32] [8086]
CMP    [/rm8,/r8] [dest,src]  [0x38,/r]     [16,32] [8086]
CMP    [/rmv,/rv] [dest,src]  [0x39,/r]     [16,32] [8086]
CMP    [/r8,/rm8] [dest,src]  [0x3A,/r]     [16,32] [8086]
CMP    [/rv,/rmv] [dest,src]  [0x3B,/r]     [16,32] [8086]
CMP    [AL,/i8]   [dest,src]  [0x3C,/i]     [16,32] [8086]
CMP    [Av,/iv]   [dest,src]  [0x3D,/i]     [16,32] [8086]
AAS    []         []          [0x3F]        [16,32] [8086]
INC    [/rv]      [dest]      [0x40,/+r]    [16,32] [8086]
DEC    [/rv]      [dest]      [0x48,/+r]    [16,32] [8086]
PUSH   [/rv]      [dest]      [0x50,/+r]    [16,32] [8086]
POP    [/rv]      [dest]      [0x58,/+r]    [16,32] [8086]
JO     [/ro8]     [target]    [0x70,/c]     [16,32] [8086]
JNO    [/ro8]     [target]    [0x71,/c]     [16,32] [8086]
JB     [/ro8]     [target]    [0x72,/c]     [16,32] [8086]
JNB    [/ro8]     [target]    [0x73,/c]     [16,32] [8086]
JZ     [/ro8]     [target]    [0x74,/c]     [16,32] [8086]
JNZ    [/ro8]     [target]    [0x75,/c]     [16,32] [8086]
JBE    [/ro8]     [target]    [0x76,/c]     [16,32] [8086]
JA     [/ro8]     [target]    [0x77,/c]     [16,32] [8086]
JS     [/ro8]     [target]    [0x78,/c]     [16,32] [8086]
JNS    [/ro8]     [target]    [0x79,/c]     [16,32] [8086]
JPE    [/ro8]     [target]    [0x7A,/c]     [16,32] [8086]
JPO    [/ro8]     [target]    [0x7B,/c]     [16,32] [8086]
JL     [/ro8]     [target]    [0x7C,/c]     [16,32] [8086]
JGE    [/ro8]     [target]    [0x7D,/c]     [16,32] [8086]
JLE    [/ro8]     [target]    [0x7E,/c]     [16,32] [8086]
JG     [/ro8]     [target]    [0x7F,/c]     [16,32] [8086]
;GRP1  [/rm8,/i8] []          [0x80]        [16,32] [8086]
;GRP1  [/rmv,/iv] []          [0x81]        [16,32] [8086]
;GRP1  [/rm8,/i8] []          [0x82]        [16,32] [8086]
;GRP1  [/rmv,/i8] []          [0x83]        [16,32] [8086]
TEST   [/r8,/rm8] [dest,src]  [0x84,/r]     [16,32] [8086]
TEST   [/rv,/rmv] [dest,src]  [0x85,/r]     [16,32] [8086]
XCHG   [/r8,/rm8] [dest,src]  [0x86,/r]     [16,32] [8086]
XCHG   [/rv,/rmv] [dest,src]  [0x87,/r]     [16,32] [8086]
MOV    [/rm8,/r8] [dest,src]  [0x88,/r]     [16,32] [8086]
MOV    [/rmv,/rv] [dest,src]  [0x89,/r]     [16,32] [8086]
MOV    [/r8,/rm8] [dest,src]  [0x8A,/r]     [16,32] [8086]
MOV    [/rv,/rmv] [dest,src]  [0x8B,/r]     [16,32] [8086]
MOV    [/rm16,/s] [dest,src]  [0x8C,/r]     [16,32] [8086]
LEA    [/rv,/mv]  [dest,src]  [0x8D,/r]     [16,32] [8086]
MOV    [/s,/rm16] [dest,src]  [0x8E,/r]     [16,32] [8086]
POP    [/rmv]     [dest,src]  [0x8F,/0]     [16,32] [8086]
NOP    []         []          [0x90]        [16,32] [8086]
XCHG   [/rv,Av]   [src1,src2] [0x90,/+r]    [16,32] [8086]
CBW    []         []          [0x98]        [16,32] [8086]
CWD    []         []          [0x99]        [16,32] [8086]
CALL   [/av]      [target]    [0x9A,/c]     [16,32] [8086]
WAIT   []         []          [0x9B]        [16,32] [8086]
PUSHF  []         []          [0x9C]        [16,32] [8086]
POPF   []         []          [0x9D]        [16,32] [8086]
SAHF   []         []          [0x9E]        [16,32] [8086]
LAHF   []         []          [0x9F]        [16,32] [8086]
MOV    [AL,/mo8]  [dest,src]  [0xA0,/c]     [16,32] [8086]
MOV    [Av,/mov]  [dest,src]  [0xA1,/c]     [16,32] [8086]
MOV    [/mo8,AL]  [dest,src]  [0xA2,/c]     [16,32] [8086]
MOV    [/mov,Av]  [dest,src]  [0xA3,/c]     [16,32] [8086]
MOVSB  []         []          [0xA4]        [16,32] [8086]
MOVSW  []         []          [0xA5]        [16]    [8086]
MOVSW  []         []          [0x66,0xA5]   [32]    [8086]
CMPSB  []         []          [0xA6]        [16,32] [8086]
CMPSW  []         []          [0xA7]        [16]    [8086]
CMPSW  []         []          [0x66,0xA7]   [32]    [8086]
TEST   [AL,/i8]   [dest,src]  [0xA8,/i]     [16,32] [8086]
TEST   [Av,/iv]   [dest,src]  [0xA9,/i]     [16,32] [8086]
STOSB  []         []          [0xAA]        [16,32] [8086]
STOSW  []         []          [0xAB]        [16]    [8086]
STOSW  []         []          [0x66,0xAB]   [32]    [8086]
LODSB  []         []          [0xAC]        [16,32] [8086]
LODSW  []         []          [0xAD]        [16]    [8086]
LODSW  []         []          [0x66,0xAD]   [32]    [8086]
SCASB  []         []          [0xAE]        [16,32] [8086]
SCASW  []         []          [0xAF]        [16]    [8086]
SCASW  []         []          [0x66,0xAF]   [32]    [8086]
MOV    [/r8,/i8]  [dest,src]  [0xB0,/+r,/i] [16,32] [8086]
MOV    [/rv,/iw]  [dest,src]  [0xB8,/+r,/i] [16,32] [8086]
RET    [/i16]     [bytes]     [0xC2,/i]     [16,32] [8086]
RET    []         []          [0xC3]        [16,32] [8086]
LES    [/rv,/m48] [dest,src]  [0xC4,/r]     [16,32] [8086]
LDS    [/rv,/m48] [dest,src]  [0xC5,/r]     [16,32] [8086]
MOV    [/rm8,/i8] [dest,src]  [0xC6,/r,/i]  [16,32] [8086]
MOV    [/rmv,/iv] [dest,src]  [0xC7,/r,/i]  [16,32] [8086]
RETF   [/i16]     [bytes]     [0xCA,/i]     [16,32] [8086]
REF    []         []          [0xCB]        [16,32] [8086]
INT    [3]        [vector]    [0xCC]        [16,32] [8086]
INT    [/i8]      [vector]    [0xCD,/i]     [16,32] [8086]
INTO   []         []          [0xCE]        [16,32] [8086]
IRET   []         []          [0xCF]        [16,32] [8086]
;GRP2  [/r8,1]    []          [0xD0]        [16,32] [8086]
;GRP2  [/rv,1]    []          [0xD1]        [16,32] [8086]
;GRP2  [/r8,CL]	  []          [0xD2]        [16,32] [8086]
;GRP2  [/rv,CL]   []          [0xD3]        [16,32] [8086]
AAM    [/ib]      [base]      [0xD4,/i]     [16,32] [8086]
AAD    [/ib]      [base]      [0xD5,/i]     [16,32] [8086]
XLAT   []         []          [0xD7]        [16,32] [8086]
LOOPNZ [/ro8]     [target]    [0xE0,/c]     [16,32] [8086]
LOOPZ  [/ro8]     [target]    [0xE1,/c]     [16,32] [8086]
LOOP   [/ro8]     [target]    [0xE2,/c]     [16,32] [8086]
JCXZ   [/ro8]     [target]    [0xE3,/c]     [16,32] [8086]
IN     [AL,/ib]   [dest,port] [0xE4,/i]     [16,32] [8086]
IN     [Av,/ib]   [dest,port] [0xE5,/i]     [16,32] [8086]
OUT    [/ib,AL]   [port,src]  [0xE6,/i]     [16,32] [8086]
OUT    [/ib,Av]   [port,src]  [0xE7,/i]     [16,32] [8086]
CALL   [/rov]     [target]    [0xE8,/c]     [16,32] [8086]
JMP    [/rov]     [target]    [0xE9,/c]     [16,32] [8086]
JMP    [/a48]     [target]    [0xEA,/c]     [16,32] [8086]
JMP    [/ro8]     [target]    [0xEB,/c]     [16,32] [8086]
IN     [AL,DX]    [dest,port] [0xEC]        [16,32] [8086]
IN     [Av,DX]    [dest,port] [0xED]        [16,32] [8086]
OUT    [DX,AL]    [port,src]  [0xEE]        [16,32] [8086]
OUT    [DX,Av]    [port,src]  [0xEF]        [16,32] [8086]
HLT    []         []          [0xF4]        [16,32] [8086]
CMC    []         []          [0xF5]        [16,32] [8086]
;GRP3a [/rm8]     []          [0xF6]        [16,32] [8086]
;GRP3b [/rmv]     []          [0xF7]        [16,32] [8086]
CLC    []         []          [0xF8]        [16,32] [8086]
STC    []         []          [0xF9]        [16,32] [8086]
CLI    []         []          [0xFA]        [16,32] [8086]
STI    []         []          [0xFB]        [16,32] [8086]
CLD    []         []          [0xFC]        [16,32] [8086]
STD    []         []          [0xFD]        [16,32] [8086]
;GRP4  [/rm8]     []          [0xFE]        [16,32] [8086]
;GRP5  [/rmv]     []          [0xFF]        [16,32] [8086]

; 8086 GRP1 Instruction set
ADD [/rm8,/i8] [dest,src] [0x80,/0,/i] [16,32] [8086]
ADD [/rmv,/iv] [dest,src] [0x81,/0,/i] [16,32] [8086]
ADD [/rm8,/i8] [dest,src] [0x82,/0,/i] [16,32] [8086]
ADD [/rmv,/i8] [dest,src] [0x83,/0,/i] [16,32] [8086]
OR  [/rm8,/i8] [dest,src] [0x80,/1,/i] [16,32] [8086]
OR  [/rmv,/iv] [dest,src] [0x81,/1,/i] [16,32] [8086]
OR  [/rm8,/i8] [dest,src] [0x82,/1,/i] [16,32] [8086]
OR  [/rmv,/i8] [dest,src] [0x83,/1,/i] [16,32] [8086]
ADC [/rm8,/i8] [dest,src] [0x80,/2,/i] [16,32] [8086]
ADC [/rmv,/iv] [dest,src] [0x81,/2,/i] [16,32] [8086]
ADC [/rm8,/i8] [dest,src] [0x82,/2,/i] [16,32] [8086]
ADC [/rmv,/i8] [dest,src] [0x83,/2,/i] [16,32] [8086]
SBB [/rm8,/i8] [dest,src] [0x80,/3,/i] [16,32] [8086]
SBB [/rmv,/iv] [dest,src] [0x81,/3,/i] [16,32] [8086]
SBB [/rm8,/i8] [dest,src] [0x82,/3,/i] [16,32] [8086]
SBB [/rmv,/i8] [dest,src] [0x83,/3,/i] [16,32] [8086]
AND [/rm8,/i8] [dest,src] [0x80,/4,/i] [16,32] [8086]
AND [/rmv,/iv] [dest,src] [0x81,/4,/i] [16,32] [8086]
AND [/rm8,/i8] [dest,src] [0x82,/4,/i] [16,32] [8086]
AND [/rmv,/i8] [dest,src] [0x83,/4,/i] [16,32] [8086]
SUB [/rm8,/i8] [dest,src] [0x80,/5,/i] [16,32] [8086]
SUB [/rmv,/iv] [dest,src] [0x81,/5,/i] [16,32] [8086]
SUB [/rm8,/i8] [dest,src] [0x82,/5,/i] [16,32] [8086]
SUB [/rmv,/i8] [dest,src] [0x83,/5,/i] [16,32] [8086]
XOR [/rm8,/i8] [dest,src] [0x80,/6,/i] [16,32] [8086]
XOR [/rmv,/iv] [dest,src] [0x81,/6,/i] [16,32] [8086]
XOR [/rm8,/i8] [dest,src] [0x82,/6,/i] [16,32] [8086]
XOR [/rmv,/i8] [dest,src] [0x83,/6,/i] [16,32] [8086]
CMP [/rm8,/i8] [dest,src] [0x80,/7,/i] [16,32] [8086]
CMP [/rmv,/iv] [dest,src] [0x81,/7,/i] [16,32] [8086]
CMP [/rm8,/i8] [dest,src] [0x82,/7,/i] [16,32] [8086]
CMP [/rmv,/i8] [dest,src] [0x83,/7,/i] [16,32] [8086]

; 8086 GRP2 Instruction set
ROL [/r8,1]  [dest,rot_cnt]   [0xD0,/0] [16,32] [8086]
ROL [/rv,1]  [dest,rot_cnt]   [0xD1,/0] [16,32] [8086]
ROL [/r8,CL] [dest,rot_cnt]   [0xD2,/0] [16,32] [8086]
ROL [/rv,CL] [dest,rot_cnt]   [0xD3,/0] [16,32] [8086]
ROR [/r8,1]  [dest,rot_cnt]   [0xD0,/1] [16,32] [8086]
ROR [/rv,1]  [dest,rot_cnt]   [0xD1,/1] [16,32] [8086]
ROR [/r8,CL] [dest,rot_cnt]   [0xD2,/1] [16,32] [8086]
ROR [/rv,CL] [dest,rot_cnt]   [0xD3,/1] [16,32] [8086]
RCL [/r8,1]  [dest,rot_cnt]   [0xD0,/2] [16,32] [8086]
RCL [/rv,1]  [dest,rot_cnt]   [0xD1,/2] [16,32] [8086]
RCL [/r8,CL] [dest,rot_cnt]   [0xD2,/2] [16,32] [8086]
RCL [/rv,CL] [dest,rot_cnt]   [0xD3,/2] [16,32] [8086]
RCR [/r8,1]  [dest,rot_cnt]   [0xD0,/3] [16,32] [8086]
RCR [/rv,1]  [dest,rot_cnt]   [0xD1,/3] [16,32] [8086]
RCR [/r8,CL] [dest,rot_cnt]   [0xD2,/3] [16,32] [8086]
RCR [/rv,CL] [dest,rot_cnt]   [0xD3,/3] [16,32] [8086]
SHL [/r8,1]  [dest,shift_cnt] [0xD0,/4] [16,32] [8086]
SHL [/rv,1]  [dest,shift_cnt] [0xD1,/4] [16,32] [8086]
SHL [/r8,CL] [dest,shift_cnt] [0xD2,/4] [16,32] [8086]
SHL [/rv,CL] [dest,shift_cnt] [0xD3,/4] [16,32] [8086]
SHR [/r8,1]  [dest,shift_cnt] [0xD0,/5] [16,32] [8086]
SHR [/rv,1]  [dest,shift_cnt] [0xD1,/5] [16,32] [8086]
SHR [/r8,CL] [dest,shift_cnt] [0xD2,/5] [16,32] [8086]
SHR [/rv,CL] [dest,shift_cnt] [0xD3,/5] [16,32] [8086]
SAR [/r8,1]  [dest,shift_cnt] [0xD0,/7] [16,32] [8086]
SAR [/rv,1]  [dest,shift_cnt] [0xD1,/7] [16,32] [8086]
SAR [/r8,CL] [dest,shift_cnt] [0xD2,/7] [16,32] [8086]
SAR [/rv,CL] [dest,shift_cnt] [0xD3,/7] [16,32] [8086]

; 8086 GRP3a Instruction set
TEST [/rm8,/i8] [dest,src] [0xF6,/0,/i] [16,32] [8086]
NOT  [/rm8]     [dest]     [0xF6,/2]    [16,32] [8086]
NEG  [/rm8]     [dest]     [0xF6,/3]    [16,32] [8086]
MUL  [/rm8]     [dest]     [0xF6,/4]    [16,32] [8086]
IMUL [/rm8]     [dest]     [0xF6,/5]    [16,32] [8086]
DIV  [/rm8]     [dest]     [0xF6,/6]    [16,32] [8086]
IDIV [/rm8]     [dest]     [0xF6,/7]    [16,32] [8086]

; 8086 GRP3b Instruction set
TEST [/rmv,/iv] [dest,src] [0xF7,/0,/i] [16,32] [8086]
NOT  [/rmv]     [dest]     [0xF7,/2]    [16,32] [8086]
NEG  [/rmv]     [dest]     [0xF7,/3]    [16,32] [8086]
MUL  [/rmv]     [dest]     [0xF7,/4]    [16,32] [8086]
IMUL [/rmv]     [dest]     [0xF7,/5]    [16,32] [8086]
DIV  [/rmv]     [dest]     [0xF7,/6]    [16,32] [8086]
IDIV [/rmv]     [dest]     [0xF7,/7]    [16,32] [8086]

; 8086 GRP4 Instruction set
INC [/rm8] [dest] [0xFE,/0] [16,32] [8086]
DEC [/rm8] [dest] [0xFE,/1] [16,32] [8086]

; 8086 GRP5 Instruction set
INC  [/rmv] [dest] [0xFF,/0] [16,32] [8086]
DEC  [/rmv] [dest] [0xFF,/1] [16,32] [8086]
CALL [/rmv] [dest] [0xFF,/2] [16,32] [8086]
CALL [/m48] [dest] [0xFF,/3] [16,32] [8086]
JMP  [/rmv] [dest] [0xFF,/4] [16,32] [8086]
JMP  [/m48] [dest] [0xFF,/5] [16,32] [8086]
PUSH [/rmv] [dest] [0xFF,/6] [16,32] [8086]

; 8086 Alias Instruction set
JNAE [/ro8] [target] [0x72,/c]   [16,32] [8086]
JAE  [/ro8] [target] [0x73,/c]   [16,32] [8086]
JE   [/ro8] [target] [0x74,/c]   [16,32] [8086]
JNE  [/ro8] [target] [0x75,/c]   [16,32] [8086]
JNA  [/ro8] [target] [0x76,/c]   [16,32] [8086]
JNBE [/ro8] [target] [0x77,/c]   [16,32] [8086]
JP   [/ro8] [target] [0x7A,/c]   [16,32] [8086]
JNP  [/ro8] [target] [0x7B,/c]   [16,32] [8086]
JNGE [/ro8] [target] [0x7C,/c]   [16,32] [8086]
JNL  [/ro8] [target] [0x7D,/c]   [16,32] [8086]
JNG  [/ro8] [target] [0x7E,/c]   [16,32] [8086]
JNLE [/ro8] [target] [0x7F,/c]   [16,32] [8086]
AAM  []     []       [0xD4,0x0A] [16,32] [8086]
AAD  []     []       [0xD5,0x0A] [16,32] [8086]

; 8087 Instruction set
FADD     [/m32]     [src]      [0xD8,/0]       [16,32] [8087]
FMUL     [/m32]     [src]      [0xD8,/1]       [16,32] [8087]
FCOM     [/m32]     [src]      [0xD8,/2]       [16,32] [8087]
FCOMP    [/m32]     [src]      [0xD8,/3]       [16,32] [8087]
FSUB     [/m32]     [src]      [0xD8,/4]       [16,32] [8087]
FSUBR    [/m32]     [src]      [0xD8,/5]       [16,32] [8087]
FDIV     [/m32]     [src]      [0xD8,/6]       [16,32] [8087]
FDIVR    [/m32]     [src]      [0xD8,/7]       [16,32] [8087]
FADD     [ST0,STv]  [dest,src] [0xD8,0xC0,/+r] [16,32] [8087]
FMUL     [ST0,STv]  [dest,src] [0xD8,0xC8,/+r] [16,32] [8087]
FCOM     [ST0,STv]  [dest,src] [0xD8,0xD0,/+r] [16,32] [8087]
FCOMP    [ST0,STv]  [dest,src] [0xD8,0xD8,/+r] [16,32] [8087]
FSUB     [ST0,STv]  [dest,src] [0xD8,0xE0,/+r] [16,32] [8087]
FSUBR    [ST0,STv]  [dest,src] [0xD8,0xE8,/+r] [16,32] [8087]
FDIV     [ST0,STv]  [dest,src] [0xD8,0xF0,/+r] [16,32] [8087]
FDIVR    [ST0,STv]  [dest,src] [0xD8,0xF8,/+r] [16,32] [8087]
FLD      [/m32]     [src]      [0xD9,/0]       [16,32] [8087]
FST      [/m32]     [src]      [0xD9,/2]       [16,32] [8087]
FSTP     [/m32]     [src]      [0xD9,/3]       [16,32] [8087]
FLDENV   [/m14e24]  [src]      [0xD9,/4]       [16,32] [8087]
FLDCW    [/m16]     [src]      [0xD9,/5]       [16,32] [8087]
FNSTEMV  [/m14e24]  [src]      [0xD9,/6]       [16,32] [8087]
FNSTCW   [/m16]     [src]      [0xD9,/7]       [16,32] [8087]
FLD      [ST0,STv]  [dest,src] [0xD9,0xC0,/+r] [16,32] [8087]
FXCH     [ST0,STv]  [dest,src] [0xD9,0xC8,/+r] [16,32] [8087]
FNOP     []         []         [0xD9,0xD0]     [16,32] [8087]
FCHS     []         []         [0xD9,0xE0]     [16,32] [8087]
FABS     []         []         [0xD9,0xE1]     [16,32] [8087]
FTST     []         []         [0xD9,0xE4]     [16,32] [8087]
FXAM     []         []         [0xD9,0xE5]     [16,32] [8087]
FLD1     []         []         [0xD9,0xE8]     [16,32] [8087]
FLDL2T   []         []         [0xD9,0xE9]     [16,32] [8087]
FLDL2E   []         []         [0xD9,0xEA]     [16,32] [8087]
FLDPI    []         []         [0xD9,0xEB]     [16,32] [8087]
FLDLG2   []         []         [0xD9,0xEC]     [16,32] [8087]
FLDLN2   []         []         [0xD9,0xED]     [16,32] [8087]
FLDZ     []         []         [0xD9,0xEE]     [16,32] [8087]
F2XM1    []         []         [0xD9,0xF0]     [16,32] [8087]
FYL2X    []         []         [0xD9,0xF1]     [16,32] [8087]
FPTAN    []         []         [0xD9,0xF2]     [16,32] [8087]
FPATAN   []         []         [0xD9,0xF3]     [16,32] [8087]
FXTRACT  []         []         [0xD9,0xF4]     [16,32] [8087]
FDECSTP  []         []         [0xD9,0xF6]     [16,32] [8087]
FINCSTP  []         []         [0xD9,0xF7]     [16,32] [8087]
FPREM    []         []         [0xD9,0xF8]     [16,32] [8087]
FYL2XP1  []         []         [0xD9,0xF9]     [16,32] [8087]
FSQRT    []         []         [0xD9,0xFA]     [16,32] [8087]
FRNDINT  []         []         [0xD9,0xFC]     [16,32] [8087]
FSCALE   []         []         [0xD9,0xFD]     [16,32] [8087]
FIADD    [/m32i]    [src]      [0xDA,/0]       [16,32] [8087]
FIMUL    [/m32i]    [src]      [0xDA,/1]       [16,32] [8087]
FICOM    [/m32i]    [src]      [0xDA,/2]       [16,32] [8087]
FICOMP   [/m32i]    [src]      [0xDA,/3]       [16,32] [8087]
FISUB    [/m32i]    [src]      [0xDA,/4]       [16,32] [8087]
FISUBR   [/m32i]    [src]      [0xDA,/5]       [16,32] [8087]
FIDIV    [/m32i]    [src]      [0xDA,/6]       [16,32] [8087]
FIDIVR   [/m32i]    [src]      [0xDA,/7]       [16,32] [8087]
FUCOMPP  []         []         [0xDA,0xE9]     [16,32] [8087]
FILD     [/m32]     [src]      [0xDB,/0]       [16,32] [8087]
FIST     [/m32]     [src]      [0xDB,/2]       [16,32] [8087]
FISTP    [/m32]     [src]      [0xDB,/3]       [16,32] [8087]
FLD      [/m80]     [src]      [0xDB,/5]       [16,32] [8087]
FSTP     [/m80]     [src]      [0xDB,/7]       [16,32] [8087]
FCMOVNB  [ST0,STv]  [dest,src] [0xDB,0xC0,/+r] [16,32] [8087]
FCMOVNE  [ST0,STv]  [dest,src] [0xDB,0xC8,/+r] [16,32] [8087]
FCMOVNBE [ST0,STv]  [dest,src] [0xDB,0xD0,/+r] [16,32] [8087]
FCMOVNU  [ST0,STv]  [dest,src] [0xDB,0xD8,/+r] [16,32] [8087]
FNCLEX   []         []         [0xDB,0xE2]     [16,32] [8087]
FNINT    []         []         [0xDB,0xE3]     [16,32] [8087]
FADD     [/m64]     [src]      [0xDC,/0]       [16,32] [8087]
FMUL     [/m64]     [src]      [0xDC,/1]       [16,32] [8087]
FCOM     [/m64]     [src]      [0xDC,/2]       [16,32] [8087]
FCOMP    [/m64]     [src]      [0xDC,/3]       [16,32] [8087]
FSUB     [/m64]     [src]      [0xDC,/4]       [16,32] [8087]
FSUBR    [/m64]     [src]      [0xDC,/5]       [16,32] [8087]
FDIV     [/m64]     [src]      [0xDC,/6]       [16,32] [8087]
FDIVR    [/m64]     [src]      [0xDC,/7]       [16,32] [8087]
FADD     [STv,ST0]  [dest,src] [0xDC,0xC0,/+r] [16,32] [8087]
FMUL     [STv,ST0]  [dest,src] [0xDC,0xC8,/+r] [16,32] [8087]
FSUBR    [STv,ST0]  [dest,src] [0xDC,0xE0,/+r] [16,32] [8087]
FSUB     [STv,ST0]  [dest,src] [0xDC,0xE8,/+r] [16,32] [8087]
FDIVR    [STv,ST0]  [dest,src] [0xDC,0xF0,/+r] [16,32] [8087]
FDIV     [STv,ST0]  [dest,src] [0xDC,0xF8,/+r] [16,32] [8087]
FLD      [/m64]     [src]      [0xDD,/0]       [16,32] [8087]
FST      [/m64]     [src]      [0xDD,/2]       [16,32] [8087]
FSTP     [/m64]     [src]      [0xDD,/3]       [16,32] [8087]
FRSTOR   [/m98e108] [src]      [0xDD,/4]       [16,32] [8087]
FNSAVE   [/m98e108] [src]      [0xDD,/6]       [16,32] [8087]
FNSTSW   [/m16]     [src]      [0xDD,/7]       [16,32] [8087]
FFREE    [STv]      [src]      [0xDD,0xC0,/+r] [16,32] [8087]
FST      [STv]      [src]      [0xDD,0xD0,/+r] [16,32] [8087]
FSTP     [STv]      [src]      [0xDD,0xD8,/+r] [16,32] [8087]
FIADD    [/m16]     [src]      [0xDE,/0]       [16,32] [8087]
FIMUL    [/m16]     [src]      [0xDE,/1]       [16,32] [8087]
FICOM    [/m16]     [src]      [0xDE,/2]       [16,32] [8087]
FICOMP   [/m16]     [src]      [0xDE,/3]       [16,32] [8087]
FISUB    [/m16]     [src]      [0xDE,/4]       [16,32] [8087]
FISUBR   [/m16]     [src]      [0xDE,/5]       [16,32] [8087]
FIDIV    [/m16]     [src]      [0xDE,/6]       [16,32] [8087]
FIDIVR   [/m16]     [src]      [0xDE,/7]       [16,32] [8087]
FADDP    [STv,ST0]  [dest,src] [0xDE,0xC0,/+r] [16,32] [8087]
FMULP    [STv,ST0]  [dest,src] [0xDE,0xC8,/+r] [16,32] [8087]
FCOMPP   []         []         [0xDE,0xD9]     [16,32] [8087]
FSUBRP   [STv,ST0]  [dest,src] [0xDE,0xE0,/+r] [16,32] [8087]
FSUBP    [STv,ST0]  [dest,src] [0xDE,0xE8,/+r] [16,32] [8087]
FDIVRP   [STv,ST0]  [dest,src] [0xDE,0xF0,/+r] [16,32] [8087]
FDIVP    [STv,ST0]  [dest,src] [0xDE,0xF8,/+r] [16,32] [8087]
FILD     [/m16]     [src]      [0xDF,/0]       [16,32] [8087]
FIST     [/m16]     [src]      [0xDF,/2]       [16,32] [8087]
FISTP    [/m16]     [src]      [0xDF,/3]       [16,32] [8087]
FBLD     [/m80]     [src]      [0xDF,/4]       [16,32] [8087]
FILD     [/m64]     [src]      [0xDF,/5]       [16,32] [8087]
FBSTP    [/m80]     [src]      [0xDF,/6]       [16,32] [8087]
FISTP    [/m64]     [src]      [0xDF,/7]       [16,32] [8087]

; 186 Instruction set
PUSHA []          []               [0x60]       [16,32] [186]
POPA  []          []               [0x61]       [16,32] [186]
BOUND [/r16,/m16] []               [0x62,/r]    [16,32] [186]
PUSH  [/i8]       [src]            [0x68,/i]    [16,32] [186]
IMUL  [/rm8,/i8]  [src]            [0x69,/r,/i] [16,32] [186]
PUSH  [/iv]       [src]            [0x6A,/i]    [16,32] [186]
IMUL  [/rmv,/iv]  [src]            [0x6B,/r,/i] [16,32] [186]
INSB  []          []               [0x6C]       [16,32] [186]
INSW  []          []               [0x6D]       [16]    [186]
INSW  []          []               [0x66,0x6D]  [32]    [186]
OUTSB []          []               [0x6E]       [16,32] [186]
OUTSW []          []               [0x6F]       [16]    [186]
OUTSW []          []               [0x66,0x6F]  [32]    [186]
ROL   [/r8,/i8]   [dest,rot_cnt]   [0xC0,/0,/i] [16,32] [186]
ROR   [/r8,/i8]   [dest,rot_cnt]   [0xC0,/1,/i] [16,32] [186]
RCL   [/r8,/i8]   [dest,rot_cnt]   [0xC0,/2,/i] [16,32] [186]
RCR   [/r8,/i8]   [dest,rot_cnt]   [0xC0,/3,/i] [16,32] [186]
SHL   [/r8,/i8]   [dest,shift_cnt] [0xC0,/4,/i] [16,32] [186]
SAL   [/r8,/i8]   [dest,shift_cnt] [0xC0,/4,/i] [16,32] [186]
SHR   [/r8,/i8]   [dest,shift_cnt] [0xC0,/5,/i] [16,32] [186]
SAR   [/r8,/i8]   [dest,shift_cnt] [0xC0,/7,/i] [16,32] [186]
ROL   [/rv,/iv]   [dest,rot_cnt]   [0xC1,/0,/i] [16,32] [186]
ROR   [/rv,/iv]   [dest,rot_cnt]   [0xC1,/1,/i] [16,32] [186]
RCL   [/rv,/iv]   [dest,rot_cnt]   [0xC1,/2,/i] [16,32] [186]
RCR   [/rv,/iv]   [dest,rot_cnt]   [0xC1,/3,/i] [16,32] [186]
SHL   [/rv,/iv]   [dest,shift_cnt] [0xC1,/4,/i] [16,32] [186]
SAL   [/rv,/iv]   [dest,shift_cnt] [0xC1,/4,/i] [16,32] [186]
SHR   [/rv,/iv]   [dest,shift_cnt] [0xC1,/5,/i] [16,32] [186]
SAR   [/rv,/iv]   [dest,shift_cnt] [0xC1,/7,/i] [16,32] [186]
ENTER [/i16,/i8]  [size,nest]      [0xC8,/i,/i] [16,32] [186]
LEAVE []          []               [0xC9]       [16,32] [186]

; 286 Instruction set
SLDT     [/m]         [dest]     [0x0F,0x00,/0]       [32]    [286]
STR      [/m]         [dest]     [0x0F,0x00,/1]       [32]    [286]
LLDT     [/m]         [src]      [0x0F,0x00,/2]       [32]    [286]
LTR      [/m]         [src]      [0x0F,0x00,/3]       [32]    [286]
VERR     [/rm16]      [src]      [0x0F,0x00,/4]       [32]    [286]
VERW     [/rm16]      [src]      [0x0F,0x00,/5]       [32]    [286]
SGDT     [/m]         [dest]     [0x0F,0x01,/0]       [16,32] [286]
SIDT     [/m]         [dest]     [0x0F,0x01,/1]       [16,32] [286]
LGDT     [/m]         [src]      [0x0F,0x01,/2]       [16,32] [286]
LIDT     [/m]         [src]      [0x0F,0x01,/3]       [16,32] [286]
LMSW     [/m]         [src]      [0x0F,0x01,/4]       [16]    [286]
LMSW     [/m]         [src]      [0x66,0x0F,0x01,/4]  [32]    [286]
SMSW     [/m]         [dest]     [0x0F,0x01,/6]       [16]    [286]
SMSW     [/m]         [dest]     [0x66,0x0F,0x01,/6]  [32]    [286]
LAR      [/rv,/rmv]   [dest,src] [0x0F,0x02,/r]       [32]    [286]
LSL      [/rv,/rmv]   [dest,src] [0x0F,0x03,/r]       [32]    [286]
CLTS     []           []         [0x0F,0x06]          [16,32] [286]
ARPL     [/rm16,/r16] [dest,src] [0x63,/r]            [32]    [286]

FSETPM   []         []         [0xDB,0xE4]     [16,32] [286]
FFREEP   [STv]      [src]      [0xDF,0xC0,/+r] [16,32] [286]
FNSTSW   [AX]       [src]      [0xDF,0xE0]     [16,32] [286]

; 386 Instruction set
LMSD    [/m]           [src]                       [0x0F,0x01,/4]       [32]    [386]
SMSD    [/m]           [dest]                      [0x0F,0x01,/6]       [32]    [386]
JO      [/rov]         [target]                    [0x0F,0x80,/c]       [16,32] [386]
JNO     [/rov]         [target]                    [0x0F,0x81,/c]       [16,32] [386]
JB      [/rov]         [target]                    [0x0F,0x82,/c]       [16,32] [386]
JNB     [/rov]         [target]                    [0x0F,0x83,/c]       [16,32] [386]
JZ      [/rov]         [target]                    [0x0F,0x84,/c]       [16,32] [386]
JNZ     [/rov]         [target]                    [0x0F,0x85,/c]       [16,32] [386]
JBE     [/rov]         [target]                    [0x0F,0x86,/c]       [16,32] [386]
JA      [/rov]         [target]                    [0x0F,0x87,/c]       [16,32] [386]
JS      [/rov]         [target]                    [0x0F,0x88,/c]       [16,32] [386]
JNS     [/rov]         [target]                    [0x0F,0x89,/c]       [16,32] [386]
JPE     [/rov]         [target]                    [0x0F,0x8A,/c]       [16,32] [386]
JPO     [/rov]         [target]                    [0x0F,0x8B,/c]       [16,32] [386]
JL      [/rov]         [target]                    [0x0F,0x8C,/c]       [16,32] [386]
JGE     [/rov]         [target]                    [0x0F,0x8D,/c]       [16,32] [386]
JLE     [/rov]         [target]                    [0x0F,0x8E,/c]       [16,32] [386]
JG      [/rov]         [target]                    [0x0F,0x8F,/c]       [16,32] [386]
SETO    [/rmv]         [dest]                      [0x0F,0x90,/0]       [16,32] [386]
SETNO   [/rmv]         [dest]                      [0x0F,0x91,/0]       [16,32] [386]
SETB    [/rmv]         [dest]                      [0x0F,0x92,/0]       [16,32] [386]
SETNB   [/rmv]         [dest]                      [0x0F,0x93,/0]       [16,32] [386]
SETZ    [/rmv]         [dest]                      [0x0F,0x94,/0]       [16,32] [386]
SETNZ   [/rmv]         [dest]                      [0x0F,0x95,/0]       [16,32] [386]
SETBE   [/rmv]         [dest]                      [0x0F,0x96,/0]       [16,32] [386]
SETA    [/rmv]         [dest]                      [0x0F,0x97,/0]       [16,32] [386]
SETS    [/rmv]         [dest]                      [0x0F,0x98,/0]       [16,32] [386]
SETNS   [/rmv]         [dest]                      [0x0F,0x99,/0]       [16,32] [386]
SETPE   [/rmv]         [dest]                      [0x0F,0x9A,/0]       [16,32] [386]
SETPO   [/rmv]         [dest]                      [0x0F,0x9B,/0]       [16,32] [386]
SETL    [/rmv]         [dest]                      [0x0F,0x9C,/0]       [16,32] [386]
SETGE   [/rmv]         [dest]                      [0x0F,0x9D,/0]       [16,32] [386]
SETLE   [/rmv]         [dest]                      [0x0F,0x9E,/0]       [16,32] [386]
SETG    [/rmv]         [dest]                      [0x0F,0x9F,/0]       [16,32] [386]
PUSH    [FS]           [src]                       [0x0F,0xA0]          [16,32] [386]
POP     [FS]           [dest]                      [0x0F,0xA1]          [16,32] [386]
SHLD    [/rmv,/rv,/i8] [dest,shift_ptrn,shift_cnt] [0x0F,0xA4]          [16,32] [386]
SHLD    [/rmv,/rv,CL]  [dest,shift_ptrn,shift_cnt] [0x0F,0xA5]          [16,32] [386]
PUSH    [GS]           [src]                       [0x0F,0xA8]          [16,32] [386]
POP     [GS]           [dest]                      [0x0F,0xA9]          [16,32] [386]
SHRD    [/rmv,/rv,/i8] [dest,shift_ptrn,shift_cnt] [0x0F,0xAC]          [16,32] [386]
SHRD    [/rmv,/rv,CL]  [dest,shift_ptrn,shift_cnt] [0x0F,0xAD]          [16,32] [386]
LSS     [/rv,/m48]     [dest,src]                  [0x0F,0xB2,/r]       [16,32] [386]
LFS     [/rv,/m48]     [dest,src]                  [0x0F,0xB4,/r]       [16,32] [386]
LGS     [/rv,/m48]     [dest,src]                  [0x0F,0xB5,/r]       [16,32] [386]
MOVZX   [/rv,/rm8]     [dest,src]                  [0x0F,0xB6]          [16,32] [386]
MOVZX   [/rv,/rm16]    [dest,src]                  [0x0F,0xB7]          [16,32] [386]
BSF     [/rv,/rmv]     [dest,src]                  [0x0F,0xBC,/r]       [16,32] [386]
BSR     [/rv,/rmv]     [dest,src]                  [0x0F,0xBD,/r]       [16,32] [386]
BT      [/rmv,/rv]     [dest,src]                  [0x0F,0xA3,/r]       [16,32] [386]
BTS     [/rmv,/rv]     [dest,src]                  [0x0F,0xAB,/r]       [16,32] [386]
BTR     [/rmv,/rv]     [dest,src]                  [0x0F,0xB3,/r]       [16,32] [386]
BT      [/rmv,/i8]     [dest,src]                  [0x0F,0xBA,/4,/i]    [16,32] [386]
BTS     [/rmv,/i8]     [dest,src]                  [0x0F,0xBA,/5,/i]    [16,32] [386]
BTR     [/rmv,/i8]     [dest,src]                  [0x0F,0xBA,/6,/i]    [16,32] [386]
BTC     [/rmv,/i8]     [dest,src]                  [0x0F,0xBA,/7,/i]    [16,32] [386]
BTC     [/rmv,/rv]     [dest,src]                  [0x0F,0xBB,/r]       [16,32] [386]
MOVSX   [/rv,/rm8]     [dest,src]                  [0x0F,0xBE]          [16,32] [386]
MOVSX   [/rv,/rm16]    [dest,src]                  [0x0F,0xBF]          [16,32] [386]
INSD    []             []                          [0x6D]               [32]    [386]
OUTSD   []             []                          [0x6F]               [32]    [386]
MOVSD   []             []                          [0xA5]               [32]    [386]
CMPSD   []             []                          [0xA7]               [32]    [386]
STOSD   []             []                          [0xAB]               [32]    [386]
LODSD   []             []                          [0xAD]               [32]    [386]
SCASD   []             []                          [0xAF]               [32]    [386]
MOV     [/r32,/cr]     [dest,src]                  [0x0F,0x20,0xC0,/+r] [16,32] [386]
MOV     [/r32,/dr]     [dest,src]                  [0x0F,0x21,0xC0,/+r] [16,32] [386]
MOV     [/cr,/r32]     [dest,src]                  [0x0F,0x22,0xC0,/+r] [16,32] [386]
MOV     [/dr,/r32]     [dest,src]                  [0x0F,0x23,0xC0,/+r] [16,32] [386]
MOV     [/r32,/tr]     [dest,src]                  [0x0F,0x24,0xC0,/+r] [16,32] [386]
MOV     [/tr,/r32]     [dest,src]                  [0x0F,0x26,0xC0,/+r] [16,32] [386]

FPREM1  []         []         [0xD9,0xF5]     [16,32] [386]
FSINCOS []         []         [0xD9,0xFB]     [16,32] [386]
FSIN    []         []         [0xD9,0xFE]     [16,32] [386]
FCOS    []         []         [0xD9,0xFF]     [16,32] [386]
FUCOM   [STv,ST0]  [dest,src] [0xDD,0xE0,/+r] [16,32] [386]
FUCOMP  [STv]      [src]      [0xDD,0xE8,/+r] [16,32] [386]

; 386 Alias Instruction set
JNAE   [/rov] [target] [0x0F,0x82,/c] [16,32] [386]
JAE    [/rov] [target] [0x0F,0x83,/c] [16,32] [386]
JE     [/rov] [target] [0x0F,0x84,/c] [16,32] [386]
JNE    [/rov] [target] [0x0F,0x85,/c] [16,32] [386]
JNA    [/rov] [target] [0x0F,0x86,/c] [16,32] [386]
JNBE   [/rov] [target] [0x0F,0x87,/c] [16,32] [386]
JP     [/rov] [target] [0x0F,0x8A,/c] [16,32] [386]
JNP    [/rov] [target] [0x0F,0x8B,/c] [16,32] [386]
JNGE   [/rov] [target] [0x0F,0x8C,/c] [16,32] [386]
JNL    [/rov] [target] [0x0F,0x8D,/c] [16,32] [386]
JNG    [/rov] [target] [0x0F,0x8E,/c] [16,32] [386]
JNLE   [/rov] [target] [0x0F,0x8F,/c] [16,32] [386]
SETNAE [/rmv] [dest]   [0x0F,0x92,/0] [16,32] [386]
SETAE  [/rmv] [dest]   [0x0F,0x93,/0] [16,32] [386]
SETE   [/rmv] [dest]   [0x0F,0x94,/0] [16,32] [386]
SETNE  [/rmv] [dest]   [0x0F,0x95,/0] [16,32] [386]
SETNA  [/rmv] [dest]   [0x0F,0x96,/0] [16,32] [386]
SETNBE [/rmv] [dest]   [0x0F,0x97,/0] [16,32] [386]
SETP   [/rmv] [dest]   [0x0F,0x9A,/0] [16,32] [386]
SETNP  [/rmv] [dest]   [0x0F,0x9B,/0] [16,32] [386]
SETNGE [/rmv] [dest]   [0x0F,0x9C,/0] [16,32] [386]
SETNL  [/rmv] [dest]   [0x0F,0x9D,/0] [16,32] [386]
SETNG  [/rmv] [dest]   [0x0F,0x9E,/0] [16,32] [386]
SETNLE [/rmv] [dest]   [0x0F,0x9F,/0] [16,32] [386]
JECXZ  [/ro8] [target] [0xE3,/c]      [16,32] [386]

; P6 Instruction set
FCMOVB   [ST0,STv]  [dest,src] [0xDA,0xC0,/+r] [16] [P6]
FCMOVE   [ST0,STv]  [dest,src] [0xDA,0xC8,/+r] [16] [P6]
FCMOVBE  [ST0,STv]  [dest,src] [0xDA,0xD0,/+r] [16] [P6]
FCMOVU   [ST0,STv]  [dest,src] [0xDA,0xD8,/+r] [16] [P6]
FUCOMI   [ST0,STv]  [dest,src] [0xDB,0xE8,/+r] [16] [P6]
FCOMI    [ST0,STv]  [dest,src] [0xDB,0xF0,/+r] [16] [P6]
FUCOMIP  [ST0,STv]  [dest,src] [0xDF,0xE8,/+r] [16] [P6]
FCOMIP   [ST0,STv]  [dest,src] [0xDF,0xF0,/+r] [16] [P6]

; PRESCOTT Instruction set
FISTTP   [/m32]     [src]      [0xDB,/1]       [16] [PRESCOTT]
FISTTP   [/m64]     [src]      [0xDD,/1]       [16] [PRESCOTT]
FISTTP   [/m16]     [src]      [0xDF,/1]       [16] [PRESCOTT]

; x86_32 General Purpose Instruction set

; x86_64 General Purpose Instruction set
