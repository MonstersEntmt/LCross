#pragma once

#include <cstddef>
#include <cstdint>

#define LCROSS_IS_FLAG(FLAGS, FLAG) ((FLAGS & FLAG) == FLAG)

#define LCROSS_CONFIG_UNKNOWN 0
#define LCROSS_CONFIG_DEBUG 1
#define LCROSS_CONFIG_DIST 2
#define LCROSS_CONFIG_RELEASE LCROSS_CONFIG_DEBUG | LCROSS_CONFIG_DIST

#define LCROSS_SYSTEM_UNKNOWN 0
#define LCROSS_SYSTEM_WINDOWS 1
#define LCROSS_SYSTEM_UNIX 2
#define LCROSS_SYSTEM_LINUX LCROSS_SYSTEM_UNIX | 4
#define LCROSS_SYSTEM_MACOS LCROSS_SYSTEM_UNIX | 8

#define LCROSS_TOOLSET_UNKNOWN 0
#define LCROSS_TOOLSET_MSVC 1
#define LCROSS_TOOLSET_CLANG 2
#define LCROSS_TOOLSET_GCC 4

#define LCROSS_PLATFORM_UNKNOWN 0
#define LCROSS_PLATFORM_X86 1
#define LCROSS_PLATFORM_X86_64 2

#define LCROSS_SUPPORT_ARCH_ALL UINT32_MAX
#define LCROSS_SUPPORT_ARCH_X86 1
#define LCROSS_SUPPORT_ARCH_X86_64 2
#define LCROSS_SUPPORT_ARCH_ARM32 4
#define LCROSS_SUPPORT_ARCH_ARM64 8

#define LCROSS_SUPPORT_FORMAT_ALL UINT32_MAX
#define LCROSS_SUPPORT_FORMAT_PE 1
#define LCROSS_SUPPORT_FORMAT_ELF 2
#define LCROSS_SUPPORT_FORMAT_BIN 4

#define LCROSS_CONFIG_IS_DEBUG LCROSS_IS_FLAG(LCROSS_CONFIG, LCROSS_CONFIG_DEBUG)
#define LCROSS_CONFIG_IS_DIST LCROSS_IS_FLAG(LCROSS_CONFIG, LCROSS_CONFIG_DIST)

#define LCROSS_SYSTEM_IS_WINDOWS LCROSS_IS_FLAG(LCROSS_SYSTEM, LCROSS_SYSTEM_WINDOWS)
#define LCROSS_SYSTEM_IS_UNIX LCROSS_IS_FLAG(LCROSS_SYSTEM, LCROSS_SYSTEM_UNIX)
#define LCROSS_SYSTEM_IS_LINUX LCROSS_IS_FLAG(LCROSS_SYSTEM, LCROSS_SYSTEM_LINUX)
#define LCROSS_SYSTEM_IS_MACOS LCROSS_IS_FLAG(LCROSS_SYSTEM, LCROSS_SYSTEM_MACOS)

#define LCROSS_TOOLSET_IS_MSVC LCROSS_IS_FLAG(LCROSS_TOOLSET, LCROSS_TOOLSET_MSVC)
#define LCROSS_TOOLSET_IS_CLANG LCROSS_IS_FLAG(LCROSS_TOOLSET, LCROSS_TOOLSET_CLANG)
#define LCROSS_TOOLSET_IS_GCC LCROSS_IS_FLAG(LCROSS_TOOLSET, LCROSS_TOOLSET_GCC)

#define LCROSS_PLATFORM_IS_X86 LCROSS_IS_FLAG(LCROSS_PLATFORM, LCROSS_PLATFORM_X86)
#define LCROSS_PLATFORM_IS_X86_64 LCROSS_IS_FLAG(LCROSS_PLATFORM, LCROSS_PLATFORM_X86_64)

#define LCROSS_SUPPORTS_ARCH_X86 LCROSS_IS_FLAG(LCROSS_SUPPORT_ARCH, LCROSS_SUPPORT_ARCH_X86)
#define LCROSS_SUPPORTS_ARCH_X86_64 LCROSS_IS_FLAG(LCROSS_SUPPORT_ARCH, LCROSS_SUPPORT_ARCH_X86_64)
#define LCROSS_SUPPORTS_ARCH_ARM32 LCROSS_IS_FLAG(LCROSS_SUPPORT_ARCH, LCROSS_SUPPORT_ARCH_ARM32)
#define LCROSS_SUPPORTS_ARCH_ARM64 LCROSS_IS_FLAG(LCROSS_SUPPORT_ARCH, LCROSS_SUPPORT_ARCH_ARM64)

#define LCROSS_SUPPORTS_FORMAT_PE LCROSS_IS_FLAG(LCROSS_SUPPORT_FORMAT, LCROSS_SUPPORT_FORMAT_PE)
#define LCROSS_SUPPORTS_FORMAT_ELF LCROSS_IS_FLAG(LCROSS_SUPPORT_FORMAT, LCROSS_SUPPORT_FORMAT_ELF)
#define LCROSS_SUPPORTS_FORMAT_BIN LCROSS_IS_FLAG(LCROSS_SUPPORT_FORMAT, LCROSS_SUPPORT_FORMAT_BIN)

#if !(LCROSS_SUPPORTS_ARCH_X86 || LCROSS_SUPPORTS_ARCH_X86_64 || LCROSS_SUPPORTS_ARCH_ARM32 || LCROSS_SUPPORTS_ARCH_ARM64)
	#error Given architecture(s) in LCROSS_SUPPORT_ARCH is not supported.
#endif
#if !(LCROSS_SUPPORTS_FORMAT_PE || LCROSS_SUPPORTS_FORMAT_ELF || LCROSS_SUPPORTS_FORMAT_BIN)
	#error Given format(s) in LCROSS_SUPPORT_FORMAT is not supported.
#endif
